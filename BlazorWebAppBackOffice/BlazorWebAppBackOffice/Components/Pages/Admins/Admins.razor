@page "/admins"
@using System.ComponentModel.DataAnnotations
@using BlazorWebAppBackOffice.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Data.SqlTypes
@inject NavigationManager Navigation
@inject HttpClient Http
@rendermode InteractiveServer
<PageTitle>Users</PageTitle>

<h1>Admins</h1>

<p>Manage Admins.</p>

@if (admins == null)
{
    <p><em>Loading...</em></p>
}
else
{
    foreach (var admin in admins)
    {
        <div class="mb-3">
            <div>@admin.Email (@admin.Role)</div>
            <button @onclick="() => EditUser(admin)">Edit Admin</button>
            <button @onclick="() => DeleteUser(admin.Email)">Delete Admin</button>
        </div>
    }
}

<button @onclick="AddUser" class="btn btn-success">Add Admin</button>

@if (editUser != null)
{
    <EditForm Model="editUser" OnValidSubmit="SaveUser">
        <DataAnnotationsValidator />
        <div class="form-group">
            <input type="hidden" @bind="editUser.OriginalEmail" />
            <label>Email:</label>
            <InputText @bind-Value="editUser!.Email" class="form-control" />
        </div>

        <div class="form-group">
            <label>Role:</label>
            <select @bind="editUser.Role" class="form-control">
                <option value="Admin">Admin</option>
                <option value="User">User</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" @onclick="CancelEdit" class="btn btn-secondary">Cancel</button>
    </EditForm>
}

@code {
    private List<ApplicationAdmin>? admins;
    private EditUserModel? editUser;

    public string statusMessage { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        admins = await Http.GetFromJsonAsync<List<ApplicationAdmin>>("https://backofficeadminprovider.azurewebsites.net/api/GetAdmins?code=zBiWbdRlZiVrv0_cxJP6OEc-aFackQpJ00xQoKH_5RFQAzFuntyfuw%3D%3D");
    }

    private void AddUser()
    {
        editUser = new EditUserModel();
    }

    private void EditUser(ApplicationAdmin admin)
    {
        editUser = new EditUserModel
            {
                Email = admin.Email,
                OriginalEmail = admin.Email,
                Role = admin.Role

            };
    }

    private async Task DeleteUser(string email)
    {
        var response = await Http.PostAsJsonAsync($"https://backofficeadminprovider.azurewebsites.net/api/silicon/admins/delete/{email}?code=4nw2908PWFeDeDrzQKGDJrJufjC3QXVBfd_9hAn-ch6RAzFu_JJR5w%3D%3D", editUser);
        if (response.IsSuccessStatusCode)
        {
            admins = await Http.GetFromJsonAsync<List<ApplicationAdmin>>("https://backofficeadminprovider.azurewebsites.net/api/GetAdmins?code=zBiWbdRlZiVrv0_cxJP6OEc-aFackQpJ00xQoKH_5RFQAzFuntyfuw%3D%3D");
        }
        else
        {
            statusMessage = "Unable to delete user, try again later.";
        }
    }

    private void CancelEdit()
    {
        editUser = null;
    }

    private async Task SaveUser()
    {
        if (editUser != null)
        {
            HttpResponseMessage response;

            response = await Http.PostAsJsonAsync($"https://backofficeadminprovider.azurewebsites.net/api/silicon/admin/update/{editUser.OriginalEmail}?code=DCHOaD6OZlchLtMjDe8Ir9HA1PW-d9QTtq5jRkyQn4Z_AzFu0ykrPw%3D%3D", editUser);



            if (response.IsSuccessStatusCode)
            {
                admins = await Http.GetFromJsonAsync<List<ApplicationAdmin>>("https://backofficeadminprovider.azurewebsites.net/api/GetAdmins?code=zBiWbdRlZiVrv0_cxJP6OEc-aFackQpJ00xQoKH_5RFQAzFuntyfuw%3D%3D");
                editUser = null;
            }
            else
            {
                statusMessage = "Unable to save user, try again later.";
            }
        }
    }

    public class EditUserModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = null!;

        public string OriginalEmail { get; set; }


        [Required]
        public string Role { get; set; } = null!;
    }

    public class ApplicationAdmin : IdentityUser
    {
        public string OriginalEmail { get; set; }

        public string Role { get; set; } = "User";
    }
}
